name: MyDevoirs Test and Build

on: [push, pull_request]

env:
  # USE_SDL2: 1
  # USE_GSTREAMER: 1
  # GST_REGISTRY: '~/registry.bin'
  # KIVY_GL_BACKEND: 'angle_sdl2'
  # KIVY_SPLIT_EXAMPLES: 1
  CODECOV_TOKEN: b12c1d6f-032c-40bf-ab16-3cc301e48115


jobs:
  Linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os : [ubuntu-latest]
        python: [3.7']
        # python: [3.7', '3.8' ]
        # arch: ['x64', 'x86']
    env:
      DISPLAY: ':99.0'
    steps:
    - name: get repo
      uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
      #   python-version: ${{ matrix.python }}
      #   architecture: ${{ matrix.arch }}
    - name: Install poetry
      run: |
        echo $"${{toJson(runner)}}"
        echo $"${{toJson(env.AAA)}}"
        python -m pip install poetry
        poetry run python -m pip install --upgrade pip
    - name: Install common dependencies
      run: poetry install
    - name: setup linux
      if: runner.os == 'Linux'
      run: |
        sudo apt install -y language-pack-fr pulseaudio
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1280x720x24 -ac +extension GLX
    - name: Tests
      run: |
        poetry run python -m pytest -vvv -s
    - name: Coverage
      run: |
        poetry run coverage run --rcfile=.coveragerc -m pytest
        poetry run coverage report
    - name: build
      run: |
        poetry run  python scripted/build_executable.py
    - name: deploy_linux
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/MyDevoirs"
        tags: true
        release_name: MyDevoirs Linux v{{github.ref}}
        tag_name: v{{github.ref}}

    - name: deploy_linux_latest
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/MyDevoirs"
        tags: true
        release_name: MyDevoirs latest linux
        overwrite: true
        tag_name: latest

  Window:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python: [3.7']
        # python: [3.7', '3.8' ]
        # arch: ['x64', 'x86']
    env:
      # USE_SDL2: 1
      # USE_GSTREAMER: 1
      # GST_REGISTRY: '~/registry.bin'
      KIVY_GL_BACKEND: 'angle_sdl2'
      # KIVY_SPLIT_EXAMPLES: 1'
    steps:
    - name: get repo
      uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      # with:
      with:
        python-version: 3.7
      #   python-version: ${{ matrix.python }}
      #   architecture: ${{ matrix.arch }}
    - name: Install poetry
      run: |
        python -m pip install poetry
        poetry run python -m pip install --upgrade pip
    - name: Install Windows dependencies
      run: |
        poetry run python -m pip install  docutils pygments pypiwin32 kivy_deps.sdl2==0.1.22 kivy_deps.glew==0.1.12 kivy_deps.gstreamer==0.1.17 kivy_deps.angle==0.1.9 pywin32-ctypes pefile
    - name: Install common dependencies
      run: poetry install
    - name: Tests
      run: |
        poetry run python -m pytest -vvv -s
    - name: Coverage
      run: |
        poetry run coverage run --rcfile=.coveragerc_win -m pytest
        poetry run coverage report
    - name: build
      run: |
        poetry run  python scripted/build_executable.py

    - name: deploy_windows
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/MyDevoirs.exe"
        tags: true
        release_name: MyDevoirs Win v{{github.ref}}
        tag_name: v{{github.ref}}


    - name: deploy_windows_latest
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/MyDevoirs.exe"
        tags: true
        release_name: MyDevoirs latest windows
        overwrite: true
        tag_name: latest


